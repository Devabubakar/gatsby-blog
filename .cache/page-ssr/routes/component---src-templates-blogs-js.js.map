{"version":3,"file":"component---src-templates-blogs-js.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA,MAAMG,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACb;AACE,OAAK,EAAE;AACLC,IAAAA,UAAU,EAAG,eADR;AAELC,IAAAA,YAAY,EAAG;AAFV;AADT,gBAME;AACE,OAAK,EAAE;AACLC,IAAAA,MAAM,EAAG,QADJ;AAELC,IAAAA,QAAQ,EAAE,GAFL;AAGLC,IAAAA,OAAO,EAAG;AAHL;AADT,gBAOE;AAAI,OAAK,EAAE;AAAEF,IAAAA,MAAM,EAAE;AAAV;AAAX,gBACE,iDAAC,wCAAD;AACE,IAAE,EAAC,GADL;AAEE,OAAK,EAAE;AACLG,IAAAA,KAAK,EAAG,OADH;AAELC,IAAAA,cAAc,EAAG;AAFZ;AAFT,GAOGP,SAPH,CADF,CAPF,CANF,CADF;;AA6BAD,MAAM,CAACS,SAAP,GAAmB;AACjBR,EAAAA,SAAS,EAAEH,0DAAgBY;AADV,CAAnB;AAIAV,MAAM,CAACW,YAAP,GAAsB;AACpBV,EAAAA,SAAS,EAAG;AADQ,CAAtB;AAIA,iEAAeD,MAAf;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;;AAEA,MAAMY,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/B,QAAMC,IAAI,GAAG,wEAAb;AAWA,sBACE,iHACE,iDAAC,+CAAD;AAAQ,aAAS,EAAE,0BAAAA,IAAI,CAACC,IAAL,CAAUC,YAAV,gFAAwBC,KAAxB,KAAkC;AAArD,IADF,eAEE;AACE,SAAK,EAAE;AACLb,MAAAA,MAAM,EAAG,QADJ;AAELC,MAAAA,QAAQ,EAAE,GAFL;AAGLC,MAAAA,OAAO,EAAG;AAHL;AADT,kBAOE,+DAAOO,QAAP,CAPF,eAQE;AACE,SAAK,EAAE;AACLK,MAAAA,SAAS,EAAG;AADP;AADT,cAKK,IAAIC,IAAJ,GAAWC,WAAX,EALL,kBAMI,GANJ,eAOE;AAAG,QAAI,EAAC;AAAR,+BACGN,IAAI,CAACC,IAAL,CAAUC,YADb,2DACG,uBAAwBK,MAD3B,CAPF,CARF,CAFF,CADF;AAyBD,CArCD;;AAuCAT,MAAM,CAACH,SAAP,GAAmB;AACjBI,EAAAA,QAAQ,EAAEf,mEAAyByB;AADlB,CAAnB;AAIA,iEAAeX,MAAf;;;;;;;;;;;;;;;;;;ACzDA;AACA;AAGA,iEAAe,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAc;AAC3B,QAAMU,IAAI,GAAGV,IAAI,CAACW,cAAlB;AACA,sBACE,2DAAC,0DAAD,qBACE,qFACE,uEAAKD,IAAI,CAACE,WAAL,CAAiBT,KAAtB,CADF,eAEE;AAAK,2BAAuB,EAAE;AAAEU,MAAAA,MAAM,EAAEH,IAAI,CAACI;AAAf;AAA9B,IAFF,CADF,CADF;AAQD,CAVD;AAYO,MAAMC,KAAK,cAAX","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/templates/blogs.js"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `2rem`,\n          }}\n        >\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href='https://www.github.com/Devabubakar'>\n            {data.site.siteMetadata?.author}\n          </a>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport Layout from '../components/layout';\nimport { graphql } from 'gatsby';\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n  return (\n    <Layout>\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query ($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["React","PropTypes","Link","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","color","textDecoration","propTypes","string","defaultProps","Layout","children","data","site","siteMetadata","title","marginTop","Date","getFullYear","author","node","isRequired","post","markdownRemark","frontmatter","__html","html","query"],"sourceRoot":""}