{"version":3,"file":"component---src-pages-index-js.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `2rem`,\n          }}\n        >\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href='https://www.github.com/Devabubakar'>\n            {data.site.siteMetadata?.author}\n          </a>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport { graphql } from 'gatsby';\n\nexport const query = graphql`\n  query getAllBlog {\n    allSanityEpisode(\n      limit: 20\n      sort: { fields: date, order: DESC }\n      filter: { youtubeID: { ne: \"null\" } }\n    ) {\n      totalCount\n      nodes {\n        date(fromNow: true)\n        slug {\n          current\n        }\n        id\n        title\n        gatsbyPath(filePath: \"/episodes/{SanityEpisode.slug__current}\")\n        description\n        youtubeID\n      }\n    }\n  }\n`;\n\nconst IndexPage = ({ data }) => {\n  const episodes = data.allSanityEpisode;\n\n  return (\n    <Layout>\n      <Seo title='Home' />\n      <h1>Hi people</h1>\n      <p>Welcome to my new Blog.</p>\n      <p>{episodes.totalCount} Blogs</p>\n      <ul>\n        {episodes.nodes.map((episode) => (\n          <div key={episode.id}>\n            <Link to={episode.gatsbyPath}>{episode.title}</Link>\n\n            <br />\n          </div>\n        ))}\n      </ul>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"names":["React","PropTypes","Link","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","color","textDecoration","propTypes","string","defaultProps","Layout","children","data","site","siteMetadata","title","marginTop","Date","getFullYear","author","node","isRequired","Helmet","Seo","description","lang","meta","metaDescription","defaultTitle","name","content","property","concat","arrayOf","object","StaticImage","query","IndexPage","episodes","allSanityEpisode","totalCount","nodes","map","episode","id","gatsbyPath"],"sourceRoot":""}